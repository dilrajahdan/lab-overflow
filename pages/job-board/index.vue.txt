<template>
  <section>
    <ul>
      <!-- <li key="job.id" :v-for="j in jobs">{{ job.position }}</li> -->
    </ul>
  </section>
</template>

<script>
export default {
  async asyncData({ $content, params, redirect, $ga, $vuetify, $fire }) {
    // console.warn('DIL async')

    const job = await $content('jobs', params.slug).fetch()

    // const jobs = []

    // await $fire.firestore
    //   .collection('jobs')
    //   .get()
    //   .then((querySnapshot) => {
    //     querySnapshot.forEach((doc) => {
    //       // doc.data() is never undefined for query doc snapshots
    //       // console.log(doc.id, ' => ', doc.data())
    //       // jobs.push({ id: doc.id, ...doc.data() })
    //       jobs.push(doc.data())
    //     })
    //   })

    return { job, params, $ga, $vuetify, redirect }
  },
  data() {
    return {
      job: null,
      // jobs: [],
    }
  },

  async mounted() {
    // console.warn('DIL mounted')
    // const jobs = []
    // await this.$fire.firestore
    //   .collection('jobs')
    //   .get()
    //   .then((querySnapshot) => {
    //     querySnapshot.forEach((doc) => {
    //       // doc.data() is never undefined for query doc snapshots
    //       // console.log(doc.id, ' => ', doc.data())
    //       // jobs.push({ id: doc.id, ...doc.data() })
    //       jobs.push(doc.data())
    //     })
    //   })
    // this.jobs = jobs
  },

  created() {
    // if (this.job && this.job.length) {
    //   if (!this.$vuetify.breakpoint.xsOnly) {
    //     this.redirect(`/job-board/${this.job[0].slug}`)
    //   }
    // }
  },

  methods: {
    // redirect(url) {
    //   this.$ga.pageview(url)
    //   this.$router.push(url)
    // },
    // getJobFrom(slug) {
    //   this.$content('jobs', slug).fetch()
    // },
  },
}
</script>
